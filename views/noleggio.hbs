<!DOCTYPE html>
<html lang="it">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Noleggio e Vendita - Catalogo Prodotti</title>
  <!-- Google Fonts: Poppins e Montserrat -->
  <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700&family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <!-- Font Awesome per le icone -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <!-- DateRangePicker CSS -->
  <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
  <!-- AOS - Animate On Scroll -->
  <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">
  <!-- jQuery richiesto per DateRangePicker -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!-- Moment.js richiesto per manipolazione date -->
  <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
  <!-- DateRangePicker JS -->
  <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
  <!-- AOS JS -->
  <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
  <style>
    /* Variabili CSS per la palette colori moderna */
    :root {
      --primary-color: #4361ee;
      --primary-light: #4895ef;
      --primary-dark: #3f37c9;
      --secondary-color: #560bad;
      --accent-color: #f72585;
      --success-color: #06d6a0;
      --warning-color: #ffb703;
      --error-color: #e63946;
      --light-bg: #f8f9fa;
      --medium-bg: #e9ecef;
      --dark-bg: #212529;
      --card-bg: #ffffff;
      --text-primary: #212529;
      --text-secondary: #6c757d;
      --text-light: #f8f9fa;
      
      --border-radius-sm: 0.5rem;
      --border-radius: 1rem;
      --border-radius-lg: 1.5rem;
      
      --card-shadow: 0 10px 20px rgba(0,0,0,0.05), 0 6px 6px rgba(0,0,0,0.1);
      --hover-shadow: 0 14px 28px rgba(0,0,0,0.15), 0 10px 10px rgba(0,0,0,0.1);
      --header-shadow: 0 4px 20px rgba(0,0,0,0.1);
      
      --transition-fast: 0.2s ease;
      --transition: 0.3s ease;
      --transition-slow: 0.5s ease;
    }

    /* Reset e stili di base */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Poppins', sans-serif;
      background-color: var(--light-bg);
      color: var(--text-primary);
      line-height: 1.6;
      padding-top: 80px;
      overflow-x: hidden;
    }

    /* Header e Navbar */
    header {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
      box-shadow: var(--header-shadow);
      z-index: 1000;
      transition: var(--transition);
    }

    header.scrolled {
      padding: 0.5rem 0;
      background: rgba(33, 37, 41, 0.95);
      backdrop-filter: blur(10px);
    }

    .navbar {
      max-width: 1400px;
      margin: 0 auto;
      padding: 1rem 2rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .navbar .logo {
      font-family: 'Montserrat', sans-serif;
      font-size: 1.8rem;
      font-weight: 700;
      color: var(--text-light);
      display: flex;
      align-items: center;
      text-decoration: none;
      transition: var(--transition);
    }

    .navbar .logo:hover {
      transform: scale(1.05);
    }

    .navbar .logo i {
      color: var(--accent-color);
      margin-right: 0.8rem;
      font-size: 1.5rem;
    }

    .nav-links {
      list-style: none;
      display: flex;
      gap: 1.5rem;
      align-items: center;
    }

    .nav-links li a {
      color: var(--text-light);
      text-decoration: none;
      padding: 0.6rem 1.2rem;
      border-radius: var(--border-radius);
      transition: var(--transition);
      font-weight: 500;
      display: flex;
      align-items: center;
      gap: 0.5rem;
      position: relative;
      overflow: hidden;
    }

    .nav-links li a::before {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 3px;
      background-color: var(--accent-color);
      transform: translateY(3px);
      opacity: 0;
      transition: var(--transition);
    }

    .nav-links li a:hover::before {
      transform: translateY(0);
      opacity: 1;
    }

    .nav-links li a:hover {
      background-color: rgba(255, 255, 255, 0.1);
      transform: translateY(-2px);
    }

    .nav-links li a i {
      font-size: 1.1rem;
    }

    /* Stile per l'icona del carrello */
    .cart-icon {
      position: relative;
    }

    .cart-count {
      position: absolute;
      top: -8px;
      right: -8px;
      background-color: var(--accent-color);
      color: white;
      border-radius: 50%;
      width: 22px;
      height: 22px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 0.7rem;
      font-weight: 700;
      transition: var(--transition-fast);
      transform-origin: center;
    }

    .cart-count.pulse {
      animation: pulse 0.5s;
    }

    @keyframes pulse {
      0% { transform: scale(1); }
      50% { transform: scale(1.2); }
      100% { transform: scale(1); }
    }

    /* Menu hamburger per dispositivi mobili */
    .hamburger {
      display: none;
      cursor: pointer;
      width: 30px;
      height: 20px;
      position: relative;
      z-index: 1100;
    }

    .hamburger span {
      display: block;
      position: absolute;
      height: 3px;
      width: 100%;
      background: white;
      border-radius: 3px;
      opacity: 1;
      left: 0;
      transform: rotate(0deg);
      transition: var(--transition-fast);
    }

    .hamburger span:nth-child(1) { top: 0px; }
    .hamburger span:nth-child(2) { top: 8px; }
    .hamburger span:nth-child(3) { top: 16px; }

    .hamburger.active span:nth-child(1) {
      top: 8px;
      transform: rotate(45deg);
    }

    .hamburger.active span:nth-child(2) {
      opacity: 0;
    }

    .hamburger.active span:nth-child(3) {
      top: 8px;
      transform: rotate(-45deg);
    }

    /* Hero section */
    .hero {
      position: relative;
      background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.7)), url('https://images.unsplash.com/photo-1441986300917-64674bd600d8?q=80&w=1770&auto=format&fit=crop');
      background-size: cover;
      background-position: center;
      height: 300px;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      margin-bottom: 3rem;
      overflow: hidden;
    }

    .hero::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      height: 40px;
      background: linear-gradient(to bottom right, transparent 49%, var(--light-bg) 50%);
    }

    .hero-content {
      text-align: center;
      max-width: 800px;
      padding: 0 2rem;
      z-index: 2;
    }

    .hero h1 {
      font-family: 'Montserrat', sans-serif;
      font-size: 3rem;
      margin-bottom: 1rem;
      color: white;
      text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.3);
    }

    .hero p {
      font-size: 1.2rem;
      margin-bottom: 2rem;
    }

    /* Heading styles */
    .section-title {
      font-family: 'Montserrat', sans-serif;
      text-align: center;
      margin-bottom: 2.5rem;
      position: relative;
      font-weight: 700;
      color: var(--primary-dark);
    }

    .section-title::after {
      content: '';
      position: absolute;
      width: 60px;
      height: 4px;
      background: var(--accent-color);
      bottom: -10px;
      left: 50%;
      transform: translateX(-50%);
      border-radius: 2px;
    }

    .section-title.with-subtitle {
      margin-bottom: 1rem;
    }

    .section-subtitle {
      text-align: center;
      color: var(--text-secondary);
      font-size: 1.1rem;
      margin-bottom: 2.5rem;
      max-width: 700px;
      margin-left: auto;
      margin-right: auto;
    }

    /* Filter container styles */
    .filter-container {
      max-width: 1300px;
      margin: 0 auto 3rem;
      background-color: var(--card-bg);
      padding: 2rem;
      border-radius: var(--border-radius);
      box-shadow: var(--card-shadow);
      transition: var(--transition);
    }

    .filter-container:hover {
      transform: translateY(-5px);
      box-shadow: var(--hover-shadow);
    }

    .filter-title {
      font-family: 'Montserrat', sans-serif;
      font-size: 1.5rem;
      margin-bottom: 1.5rem;
      color: var(--primary-dark);
      text-align: center;
      position: relative;
      display: inline-block;
    }

    .filter-title::after {
      content: '';
      position: absolute;
      bottom: -5px;
      left: 0;
      width: 100%;
      height: 3px;
      background: linear-gradient(90deg, var(--primary-color), var(--accent-color));
      border-radius: 1.5px;
    }

    .filter-container form {
      display: flex;
      flex-wrap: wrap;
      gap: 1rem;
      align-items: center;
      justify-content: center;
    }

    .filter-group {
      flex: 1;
      min-width: 200px;
    }

    .filter-label {
      font-weight: 500;
      display: block;
      margin-bottom: 0.5rem;
      color: var(--text-secondary);
      transition: var(--transition-fast);
    }

    .filter-input {
      width: 100%;
      padding: 0.8rem 1rem;
      border: 1px solid #dee2e6;
      border-radius: var(--border-radius-sm);
      font-size: 1rem;
      font-family: 'Poppins', sans-serif;
      transition: var(--transition);
      background-color: rgba(255, 255, 255, 0.9);
    }

    .filter-input:focus {
      border-color: var(--primary-color);
      box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.2);
      outline: none;
    }

    .filter-input:focus + .filter-label {
      color: var(--primary-color);
    }

    .filter-button {
      padding: 0.8rem 1.5rem;
      border: none;
      border-radius: var(--border-radius-sm);
      font-size: 1rem;
      font-weight: 500;
      cursor: pointer;
      transition: var(--transition);
      font-family: 'Poppins', sans-serif;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .filter-primary {
      background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
      color: white;
      min-width: 140px;
    }

    .filter-primary:hover {
      transform: translateY(-3px);
      box-shadow: 0 4px 12px rgba(67, 97, 238, 0.3);
    }

    .filter-secondary {
      background: transparent;
      color: var(--primary-color);
      border: 1px solid var(--primary-color);
      margin-top: 1rem;
    }

    .filter-secondary:hover {
      background-color: rgba(67, 97, 238, 0.1);
      transform: translateY(-2px);
    }

    /* Products section */
    .products-container {
      max-width: 1400px;
      margin: 0 auto;
      padding: 0 1rem;
    }

    .products-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 2rem;
      margin-bottom: 4rem;
    }

    /* Product card styles */
    .product-card {
      background-color: var(--card-bg);
      border-radius: var(--border-radius);
      overflow: hidden;
      box-shadow: var(--card-shadow);
      transition: var(--transition);
      position: relative;
      display: flex;
      flex-direction: column;
      height: 100%;
    }

    .product-card:hover {
      transform: translateY(-10px);
      box-shadow: var(--hover-shadow);
    }

    .product-img {
      height: 200px;
      background-size: cover;
      background-position: center;
      position: relative;
      overflow: hidden;
    }

    .product-img::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(to bottom, rgba(0,0,0,0.1), rgba(0,0,0,0.3));
      z-index: 1;
    }

    .product-tag {
      position: absolute;
      top: 1rem;
      right: 1rem;
      padding: 0.5rem 1rem;
      background-color: var(--accent-color);
      color: white;
      font-weight: 600;
      font-size: 0.8rem;
      border-radius: var(--border-radius-sm);
      z-index: 2;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .product-content {
      padding: 1.5rem;
      display: flex;
      flex-direction: column;
      flex-grow: 1;
    }

    .product-title {
      font-size: 1.4rem;
      font-weight: 700;
      margin-bottom: 1rem;
      color: var(--primary-dark);
      line-height: 1.3;
      font-family: 'Montserrat', sans-serif;
    }

    .product-details {
      margin-bottom: 1.5rem;
      flex-grow: 1;
    }

    .product-detail {
      display: flex;
      align-items: center;
      margin-bottom: 0.8rem;
      color: var(--text-secondary);
    }

    .product-detail i {
      color: var(--primary-color);
      width: 20px;
      margin-right: 0.5rem;
    }

    .product-price {
      font-size: 1.5rem;
      font-weight: 700;
      color: var(--primary-dark);
      margin-bottom: 1.5rem;
      display: flex;
      align-items: center;
    }

    .product-price i {
      color: var(--accent-color);
      margin-right: 0.5rem;
    }

    .product-actions {
      margin-top: auto;
    }

    /* Rental form styles */
    .rental-form {
      margin-bottom: 1rem;
    }

    .rental-label {
      font-weight: 500;
      display: block;
      margin-bottom: 0.5rem;
      color: var(--text-secondary);
    }

    .date-range-container {
      position: relative;
      margin-bottom: 1rem;
    }

    .date-range-input {
      width: 100%;
      padding: 0.8rem 1rem;
      padding-right: 2.5rem;
      border: 1px solid #dee2e6;
      border-radius: var(--border-radius-sm);
      font-size: 1rem;
      font-family: 'Poppins', sans-serif;
      transition: var(--transition);
      cursor: pointer;
      background-color: #fff;
    }

    .date-range-input:focus {
      border-color: var(--primary-color);
      box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.2);
      outline: none;
    }

    .date-range-container::after {
      content: "\f073";
      font-family: 'Font Awesome 5 Free';
      font-weight: 900;
      position: absolute;
      right: 1rem;
      top: 50%;
      transform: translateY(-50%);
      color: var(--primary-color);
      pointer-events: none;
    }

    .days-count {
      font-size: 0.9rem;
      margin-bottom: 1rem;
      color: var(--text-secondary);
      display: flex;
      align-items: center;
    }

    .days-count i {
      color: var(--primary-color);
      margin-right: 0.5rem;
    }

    .action-button {
      width: 100%;
      padding: 0.8rem 1rem;
      border: none;
      border-radius: var(--border-radius-sm);
      font-size: 1rem;
      font-weight: 500;
      cursor: pointer;
      transition: var(--transition);
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
      font-family: 'Poppins', sans-serif;
    }

    .rental-button {
      background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
      color: white;
      margin-bottom: 1rem;
    }

    .rental-button:hover {
      transform: translateY(-3px);
      box-shadow: 0 4px 12px rgba(67, 97, 238, 0.3);
    }

    .purchase-button {
      background: var(--accent-color);
      color: white;
    }

    .purchase-button:hover {
      transform: translateY(-3px);
      box-shadow: 0 4px 12px rgba(247, 37, 133, 0.3);
    }

    /* Notification styles */
    .notification {
      position: fixed;
      bottom: 2rem;
      right: 2rem;
      padding: 1rem 1.5rem;
      border-radius: var(--border-radius);
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
      transform: translateY(100px);
      opacity: 0;
      transition: transform 0.3s, opacity 0.3s;
      z-index: 1010;
      font-weight: 500;
      display: flex;
      align-items: center;
      gap: 0.8rem;
      max-width: 350px;
    }

    .notification i {
      font-size: 1.2rem;
    }

    .notification {
      background: linear-gradient(135deg, var(--success-color), #06af81);
      color: white;
    }

    .notification.error {
      background: linear-gradient(135deg, var(--error-color), #d64161);
      color: white;
    }

    .notification.show {
      transform: translateY(0);
      opacity: 1;
    }

    /* Loading spinner */
    .loader {
      display: none;
      width: 50px;
      height: 50px;
      margin: 2rem auto;
      position: relative;
    }

    .loader:before,
    .loader:after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: 50%;
      border: 5px solid transparent;
      border-top-color: var(--primary-color);
    }

    .loader:before {
      z-index: 10;
      animation: spin 1s infinite;
    }

    .loader:after {
      border: 5px solid rgba(67, 97, 238, 0.1);
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    /* No results message */
    .no-results {
      grid-column: 1 / -1;
      text-align: center;
      padding: 3rem;
      background: white;
      border-radius: var(--border-radius);
      box-shadow: var(--card-shadow);
      font-size: 1.2rem;
      color: var(--text-secondary);
    }

    .no-results i {
      display: block;
      font-size: 3rem;
      color: var(--primary-light);
      margin-bottom: 1rem;
    }

    /* Cart modal styles */
    .cart-modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      z-index: 1100;
      overflow-y: auto;
      backdrop-filter: blur(5px);
      opacity: 0;
      transition: opacity 0.3s;
    }

    .cart-modal.open {
      opacity: 1;
    }

    .cart-container {
      background-color: var(--light-bg);
      width: 90%;
      max-width: 900px;
      margin: 80px auto;
      border-radius: var(--border-radius);
      box-shadow: var(--hover-shadow);
      padding: 2rem;
      position: relative;
      transform: translateY(-20px);
      opacity: 0;
      transition: transform 0.4s, opacity 0.4s;
    }

    .cart-modal.open .cart-container {
      transform: translateY(0);
      opacity: 1;
    }

    .cart-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 1.5rem;
      padding-bottom: 1rem;
      border-bottom: 2px solid var(--medium-bg);
    }

    .cart-title {
      font-family: 'Montserrat', sans-serif;
      font-size: 1.8rem;
      color: var(--primary-dark);
      font-weight: 700;
      display: flex;
      align-items: center;
      gap: 0.8rem;
    }

    .cart-title i {
      color: var(--accent-color);
    }

    .cart-close {
      background: none;
      border: none;
      font-size: 1.5rem;
      color: var(--text-secondary);
      cursor: pointer;
      transition: all 0.2s;
      width: 40px;
      height: 40px;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 50%;
    }

    .cart-close:hover {
      color: var(--error-color);
      background-color: rgba(230, 57, 70, 0.1);
      transform: rotate(90deg);
    }

    .cart-items {
      max-height: 400px;
      overflow-y: auto;
      margin-bottom: 1.5rem;
      padding-right: 0.5rem;
    }

    /* Scrollbar styling */
    .cart-items::-webkit-scrollbar {
      width: 6px;
    }

    .cart-items::-webkit-scrollbar-track {
      background: var(--medium-bg);
      border-radius: 3px;
    }

    .cart-items::-webkit-scrollbar-thumb {
      background-color: var(--primary-light);
      border-radius: 3px;
    }

    .cart-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 1rem;
      margin-bottom: 1rem;
      background-color: white;
      border-radius: var(--border-radius-sm);
      box-shadow: 0 2px 8px rgba(0,0,0,0.05);
      transition: var(--transition-fast);
      position: relative;
      overflow: hidden;
    }

    .cart-item::before {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      height: 100%;
      width: 4px;
      background: var(--primary-color);
    }

    .cart-item.purchase::before {
      background: var(--accent-color);
    }

    .cart-item:hover {
      transform: translateY(-3px);
      box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    }

    .cart-item-details {
      flex: 1;
      padding-right: 1rem;
    }

    .cart-item-title {
      font-weight: 600;
      color: var(--primary-dark);
      margin-bottom: 0.3rem;
      font-family: 'Montserrat', sans-serif;
      display: flex;
      align-items: center;
      flex-wrap: wrap;
      gap: 0.5rem;
    }

    .cart-item-badge {
      display: inline-block;
      padding: 0.2rem 0.5rem;
      border-radius: 12px;
      font-size: 0.7rem;
      font-weight: 600;
      text-transform: uppercase;
    }

    .cart-item-badge.rental {
      background-color: rgba(67, 97, 238, 0.1);
      color: var(--primary-color);
    }

    .cart-item-badge.purchase {
      background-color: rgba(247, 37, 133, 0.1);
      color: var(--accent-color);
    }

    .cart-item-info {
      font-size: 0.9rem;
      color: var(--text-secondary);
      display: flex;
      flex-wrap: wrap;
      gap: 0.8rem;
    }

    .cart-item-period {
      font-size: 0.85rem;
      color: var(--text-secondary);
      margin-top: 0.5rem;
      display: flex;
      align-items: center;
    }

    .cart-item-period i {
      color: var(--primary-color);
      margin-right: 0.4rem;
    }

    .cart-item-actions {
      display: flex;
      align-items: center;
      gap: 1rem;
    }

    .cart-item-price {
      font-weight: 700;
      color: var(--primary-dark);
      font-size: 1.1rem;
    }

    .cart-item-remove {
      background: none;
      border: none;
      color: var(--error-color);
      cursor: pointer;
      width: 35px;
      height: 35px;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 50%;
      transition: all 0.2s;
      font-size: 1rem;
      background-color: rgba(230, 57, 70, 0.1);
    }

    .cart-item-remove:hover {
      background-color: var(--error-color);
      color: white;
      transform: rotate(90deg);
    }

    .cart-empty {
      text-align: center;
      padding: 3rem 1rem;
      color: var(--text-secondary);
    }

    .cart-empty i {
      display: block;
      font-size: 4rem;
      color: var(--medium-bg);
      margin-bottom: 1rem;
    }

    .cart-empty p {
      font-size: 1.2rem;
      margin-bottom: 1.5rem;
    }

    .cart-empty-button {
      background: var(--primary-color);
      color: white;
      border: none;
      padding: 0.8rem 1.5rem;
      border-radius: var(--border-radius-sm);
      font-size: 1rem;
      font-weight: 500;
      cursor: pointer;
      transition: var(--transition);
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
    }

    .cart-empty-button:hover {
      background: var(--primary-dark);
      transform: translateY(-3px);
      box-shadow: 0 4px 12px rgba(67, 97, 238, 0.3);
    }

    .cart-summary {
      background-color: white;
      padding: 1.5rem;
      border-radius: var(--border-radius-sm);
      margin-bottom: 1.5rem;
      box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    }

    .cart-summary-row {
      display: flex;
      justify-content: space-between;
      margin-bottom: 0.8rem;
      color: var(--text-secondary);
    }

    .cart-summary-total {
      font-size: 1.2rem;
      font-weight: 700;
      color: var(--primary-dark);
      padding-top: 0.8rem;
      margin-top: 0.8rem;
      border-top: 1px solid var(--medium-bg);
    }

    .cart-actions {
      display: flex;
      justify-content: space-between;
      gap: 1rem;
    }

    .cart-action-button {
      flex: 1;
      padding: 1rem 1.5rem;
      border: none;
      border-radius: var(--border-radius-sm);
      font-size: 1rem;
      font-weight: 500;
      cursor: pointer;
      transition: var(--transition);
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
    }

    .cart-continue {
      background-color: white;
      color: var(--primary-color);
      border: 1px solid var(--primary-color);
    }

    .cart-continue:hover {
      background-color: rgba(67, 97, 238, 0.1);
    }

    .cart-checkout {
      background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
      color: white;
    }

    .cart-checkout:hover {
      transform: translateY(-3px);
      box-shadow: 0 4px 12px rgba(67, 97, 238, 0.3);
    }

    /* DateRangePicker custom styles */
    .daterangepicker {
      font-family: 'Poppins', sans-serif;
      border-radius: var(--border-radius-sm);
      box-shadow: 0 10px 20px rgba(0,0,0,0.1);
      border: none;
    }

    .daterangepicker .calendar-table {
      border-radius: var(--border-radius-sm);
    }

    .daterangepicker td.active, 
    .daterangepicker td.active:hover {
      background-color: var(--primary-color);
    }

    .daterangepicker .drp-buttons .btn {
      border-radius: var(--border-radius-sm);
      font-family: 'Poppins', sans-serif;
      padding: 0.5rem 1rem;
    }

    .daterangepicker .drp-buttons .applyBtn {
      background-color: var(--primary-color);
      border-color: var(--primary-color);
    }

    .daterangepicker .drp-selected {
      font-size: 0.9rem;
    }

    /* Mobile menu */
    .mobile-menu {
      position: fixed;
      top: 0;
      right: -100%;
      width: 80%;
      max-width: 300px;
      height: 100%;
      background: var(--dark-bg);
      z-index: 1050;
      display: flex;
      flex-direction: column;
      padding: 2rem;
      transition: right 0.3s ease;
      box-shadow: -5px 0 15px rgba(0,0,0,0.1);
    }

    .mobile-menu.active {
      right: 0;
    }

    .mobile-menu-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 2rem;
    }

    .mobile-menu-title {
      color: white;
      font-weight: 600;
      font-size: 1.2rem;
    }

    .mobile-menu-close {
      background: none;
      border: none;
      color: white;
      font-size: 1.5rem;
      cursor: pointer;
    }

    .mobile-nav-links {
      list-style: none;
      margin-top: 1.5rem;
    }

    .mobile-nav-links li {
      margin-bottom: 1rem;
    }

    .mobile-nav-links a {
      color: white;
      text-decoration: none;
      font-size: 1.1rem;
      display: flex;
      align-items: center;
      gap: 0.8rem;
      padding: 0.8rem;
      border-radius: var(--border-radius-sm);
      transition: var(--transition-fast);
    }

    .mobile-nav-links a:hover {
      background-color: rgba(255,255,255,0.1);
    }

    .mobile-nav-links a i {
      width: 20px;
      text-align: center;
    }

    /* Responsive styles */
    @media (max-width: 1200px) {
      .products-grid {
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 1.5rem;
      }
    }

    @media (max-width: 992px) {
      .hero h1 {
        font-size: 2.5rem;
      }
      
      .filter-group {
        min-width: 170px;
      }
    }

    @media (max-width: 768px) {
      body {
        padding-top: 70px;
      }
      
      .hero {
        height: 250px;
      }
      
      .hero h1 {
        font-size: 2rem;
      }
      
      .hero p {
        font-size: 1rem;
      }
      
      .navbar {
        padding: 0.8rem 1.5rem;
      }
      
      .nav-links {
        display: none;
      }
      
      .hamburger {
        display: block;
      }
      
      .filter-container {
        padding: 1.5rem 1rem;
      }
      
      .section-title {
        font-size: 1.8rem;
      }
      
      .cart-actions {
        flex-direction: column;
      }
      
      .cart-container {
        width: 95%;
        padding: 1.5rem;
        margin: 60px auto;
      }
    }

    @media (max-width: 576px) {
      .hero h1 {
        font-size: 1.8rem;
      }
      
      .section-title {
        font-size: 1.5rem;
      }
      
      .product-title {
        font-size: 1.2rem;
      }
      
      .cart-item {
        flex-direction: column;
        align-items: flex-start;
      }
      
      .cart-item-actions {
        width: 100%;
        justify-content: space-between;
        margin-top: 1rem;
      }
      
      .cart-item-details {
        width: 100%;
        padding-right: 0;
      }
    }

    /* Animations */
    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }

    @keyframes slideInUp {
      from { 
        transform: translateY(20px);
        opacity: 0;
      }
      to { 
        transform: translateY(0);
        opacity: 1;
      }
    }

    .fade-in {
      animation: fadeIn 0.5s ease forwards;
    }

    .slide-in-up {
      animation: slideInUp 0.5s ease forwards;
    }
  </style>
</head>

<body>
  <header id="header">
    <nav class="navbar">
      <a href="/" class="logo">
        <i class="fas fa-store"></i>
        <span>StoreRental</span>
      </a>
      <ul class="nav-links">
        <li><a href="/home"><i class="fas fa-home"></i> Home</a></li>
        <li><a href="/static/index.html"><i class="fas fa-comments"></i> Chat</a></li>
        <li>
          <a href="#" id="cart-button">
            <div class="cart-icon">
              <i class="fas fa-shopping-cart"></i>
              <span class="cart-count">0</span>
            </div>
            Carrello
          </a>
        </li>
        <li><a href="/logout"><i class="fas fa-sign-out-alt"></i> Logout</a></li>
      </ul>
      <div class="hamburger" id="hamburger">
        <span></span>
        <span></span>
        <span></span>
      </div>
    </nav>
  </header>

  <!-- Mobile menu -->
  <div class="mobile-menu" id="mobile-menu">
    <div class="mobile-menu-header">
      <div class="mobile-menu-title">Menu</div>
      <button class="mobile-menu-close" id="mobile-menu-close">
        <i class="fas fa-times"></i>
      </button>
    </div>
    <ul class="mobile-nav-links">
      <li><a href="/home"><i class="fas fa-home"></i> Home</a></li>
      <li><a href="/static/index.html"><i class="fas fa-comments"></i> Chat</a></li>
      <li><a href="#" id="mobile-cart-button"><i class="fas fa-shopping-cart"></i> Carrello <span class="mobile-cart-count">(0)</span></a></li>
      <li><a href="/logout"><i class="fas fa-sign-out-alt"></i> Logout</a></li>
    </ul>
  </div>

  <main>
    <!-- Hero Section -->
    <section class="hero">
      <div class="hero-overlay"></div>
      <div class="hero-content">
        <h1>Catalogo Noleggio e Vendita</h1>
        <p>Scopri la nostra selezione di prodotti disponibili per noleggio o acquisto</p>
        <a href="#products-section" class="hero-button">Esplora i prodotti</a>
      </div>
    </section>

    <!-- Filtri -->
    <div class="container" data-aos="fade-up" data-aos-delay="100">
      <div class="filter-container">
        <div class="text-center mb-4">
          <h2 class="filter-title">Filtra Prodotti</h2>
        </div>
        <form id="filterForm" action="/noleggio" method="get">
          <div class="filter-group">
            <label for="brand" class="filter-label">Brand:</label>
            <input type="text" id="brand" name="brand" placeholder="Es. Nike" value="{{brand}}" class="filter-input">
          </div>
          <div class="filter-group">
            <label for="colore" class="filter-label">Colore:</label>
            <input type="text" id="colore" name="colore" placeholder="Es. Rosso" value="{{colore}}" class="filter-input">
          </div>
          <div class="filter-group">
            <label for="condizione" class="filter-label">Condizione:</label>
            <input type="text" id="condizione" name="condizione" placeholder="Es. Nuovo" value="{{condizione}}" class="filter-input">
          </div>
          <div class="filter-group">
            <label for="prezzoMin" class="filter-label">Prezzo Min (€):</label>
            <input type="number" id="prezzoMin" name="prezzoMin" value="{{prezzoMin}}" class="filter-input">
          </div>
          <div class="filter-group">
            <label for="prezzoMax" class="filter-label">Prezzo Max (€):</label>
            <input type="number" id="prezzoMax" name="prezzoMax" value="{{prezzoMax}}" class="filter-input">
          </div>
          <div class="filter-group">
            <button type="submit" class="filter-button filter-primary"><i class="fas fa-filter"></i> Filtra</button>
          </div>
        </form>
        <form id="showAllForm" action="/noleggio" method="get" class="text-center">
          <button type="submit" class="filter-button filter-secondary"><i class="fas fa-sync-alt"></i> Mostra Tutti</button>
        </form>
      </div>
    </div>

    <!-- Prodotti -->
    <div class="products-container" id="products-section">
      <h2 class="section-title with-subtitle" data-aos="fade-up">Risultati della Ricerca</h2>
      <p class="section-subtitle" data-aos="fade-up" data-aos-delay="50">Esplora i prodotti disponibili nel nostro catalogo</p>

      <!-- Loader -->
      <div id="loaderContainer" class="loader"></div>

      <!-- Griglia prodotti -->
      <div id="products" class="products-grid">
        {{#if products.length}}
        {{#each products}}
        <div class="product-card" data-aos="fade-up" 
             data-id="{{id}}" 
             data-brand="{{brand}}" 
             data-category="{{category}}" 
             data-color="{{color}}" 
             data-condition="{{condition}}" 
             data-price="{{price}}">
          <div class="product-badges">
            <!-- I badge verranno aggiunti dinamicamente via JavaScript -->
          </div>
          
          <div class="product-img-container">
            <img class="product-img" src="https://source.unsplash.com/500x600/?{{category}},{{color}},fashion&sig={{id}}" alt="{{brand}} {{category}}" loading="lazy">
            <div class="product-overlay">
              <button class="quick-view-btn" data-id="{{id}}"><i class="fas fa-search-plus"></i> Anteprima</button>
            </div>
          </div>
          
          <div class="product-content">
            <div class="product-brand">{{brand}}</div>
            <h3 class="product-title">{{category}}</h3>
            
            <div class="product-details">
              <div class="product-detail"><i class="fas fa-info-circle"></i> Condizione: {{condition}}</div>
              <div class="product-detail"><i class="fas fa-palette"></i> Colore: {{color}}</div>
            </div>
            
            <div class="product-price">
              <i class="fas fa-tag"></i> 
              <span class="current-price">{{price}}€</span>
              <span class="old-price"></span>
            </div>
            
            <div class="product-actions">
              <!-- Form per il noleggio -->
              <form class="rental-form" action="javascript:void(0);">
                <input type="hidden" name="id" value="{{id}}">
                <input type="hidden" name="brand" value="{{brand}}">
                <input type="hidden" name="category" value="{{category}}">
                <input type="hidden" name="price" value="{{price}}">
                <input type="hidden" name="color" value="{{color}}">
                <input type="hidden" name="condition" value="{{condition}}">
                <label for="daterange-{{id}}" class="rental-label">Seleziona Periodo:</label>
                <div class="date-range-container">
                  <input type="text" id="daterange-{{id}}" class="date-range-input" name="daterange" readonly required>
                  <input type="hidden" id="durata-{{id}}" name="durata" value="1">
                  <input type="hidden" name="startDate" id="startDate-{{id}}">
                  <input type="hidden" name="endDate" id="endDate-{{id}}">
                </div>
                <p class="days-count" id="days-count-{{id}}"><i class="far fa-calendar-alt"></i> Durata: 1 giorno</p>
                <button type="submit" class="action-button rental-button"><i class="fas fa-cart-plus"></i> Noleggia</button>
              </form>
              
              <!-- Form per l'acquisto -->
              <form class="purchase-form" action="javascript:void(0);">
                <input type="hidden" name="id" value="{{id}}">
                <input type="hidden" name="brand" value="{{brand}}">
                <input type="hidden" name="category" value="{{category}}">
                <input type="hidden" name="price" value="{{price}}">
                <input type="hidden" name="color" value="{{color}}">
                <input type="hidden" name="condition" value="{{condition}}">
                <button type="submit" class="action-button purchase-button"><i class="fas fa-shopping-cart"></i> Acquista</button>
              </form>
            </div>
          </div>
        </div>
        {{/each}}
        {{else}}
        <div class="no-results" data-aos="fade-up">
          <i class="fas fa-search"></i>
          <p>Nessun prodotto trovato con i filtri applicati.</p>
          <p>Prova a modificare i criteri di ricerca.</p>
        </div>
        {{/if}}
      </div>
    </div>
  </main>

  <!-- Modale Anteprima Prodotto -->
  <div id="product-modal" class="product-modal">
    <div class="product-modal-container">
      <button class="modal-close"><i class="fas fa-times"></i></button>
      <div class="product-modal-content">
        <div class="product-modal-gallery">
          <div class="main-image-container">
            <img id="modal-main-image" src="" alt="Immagine prodotto">
          </div>
          <div class="thumbnail-container">
            <div class="thumbnail active" data-index="0"></div>
            <div class="thumbnail" data-index="1"></div>
            <div class="thumbnail" data-index="2"></div>
          </div>
        </div>
        <div class="product-modal-info">
          <h2 id="modal-brand" class="modal-brand"></h2>
          <h3 id="modal-title" class="modal-title"></h3>
          <div class="modal-price">
            <span id="modal-price"></span>
          </div>
          <div class="modal-details">
            <div class="modal-detail">
              <span class="detail-label">Condizione:</span>
              <span id="modal-condition" class="detail-value"></span>
            </div>
            <div class="modal-detail">
              <span class="detail-label">Colore:</span>
              <span id="modal-color" class="detail-value"></span>
            </div>
          </div>
          <div class="modal-description">
            <p>Questo capo di abbigliamento è perfetto per ogni occasione. Realizzato con materiali di alta qualità per garantire comfort e durata. Disponibile per noleggio o acquisto diretto.</p>
            <p>La nostra politica di noleggio prevede la possibilità di restituire il prodotto in qualsiasi momento entro il periodo selezionato.</p>
          </div>
          <div class="modal-actions">
            <button id="modal-rent-button" class="modal-action-button modal-rent">
              <i class="fas fa-calendar-check"></i> Seleziona date e noleggia
            </button>
            <button id="modal-buy-button" class="modal-action-button modal-buy">
              <i class="fas fa-shopping-cart"></i> Acquista ora
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Modale Carrello -->
  <div id="cart-modal" class="cart-modal">
    <div class="cart-container">
      <div class="cart-header">
        <h2 class="cart-title"><i class="fas fa-shopping-cart"></i> Il tuo carrello</h2>
        <button class="cart-close"><i class="fas fa-times"></i></button>
      </div>

      <div class="cart-items">
        <!-- Gli elementi del carrello verranno inseriti qui dinamicamente -->
      </div>

      <div class="cart-summary">
        <div class="cart-summary-row">
          <span>Subtotale</span>
          <span id="cart-subtotal">0.00€</span>
        </div>
        <div class="cart-summary-row">
          <span>IVA (22%)</span>
          <span id="cart-tax">0.00€</span>
        </div>
        <div class="cart-summary-row cart-summary-total">
          <span>Totale</span>
          <span id="cart-total">0.00€</span>
        </div>
      </div>

      <div class="cart-actions">
        <button class="cart-action-button cart-continue">
          <i class="fas fa-arrow-left"></i> Continua lo shopping
        </button>
        <button class="cart-action-button cart-checkout">
          <i class="fas fa-check"></i> Procedi al checkout
        </button>
      </div>
    </div>
  </div>

  <!-- Notifiche -->
  <div id="notification" class="notification">
    <i class="fas fa-check-circle"></i>
    <span class="notification-message"></span>
  </div>

  <!-- Style aggiuntivo -->
  <style>
    /* Miglioramenti visivi per le card prodotto */
    .product-card {
      border-radius: 12px;
      overflow: hidden;
      box-shadow: 0 5px 15px rgba(0,0,0,0.08);
      transition: all 0.3s ease;
      background: #fff;
      position: relative;
    }
    
    .product-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 25px rgba(0,0,0,0.15);
    }
    
    .product-img-container {
      position: relative;
      height: 280px;
      overflow: hidden;
    }
    
    .product-img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform 0.5s ease;
    }
    
    .product-card:hover .product-img {
      transform: scale(1.05);
    }
    
    .product-overlay {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0,0,0,0.3);
      display: flex;
      align-items: center;
      justify-content: center;
      opacity: 0;
      transition: opacity 0.3s ease;
    }
    
    .product-card:hover .product-overlay {
      opacity: 1;
    }
    
    .quick-view-btn {
      background: white;
      color: #333;
      border: none;
      padding: 10px 15px;
      border-radius: 50px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 8px;
    }
    
    .quick-view-btn:hover {
      background: #f0f0f0;
      transform: scale(1.05);
    }
    
    .product-badges {
      position: absolute;
      top: 10px;
      left: 10px;
      z-index: 10;
      display: flex;
      flex-direction: column;
      gap: 5px;
    }
    
    .badge {
      padding: 5px 10px;
      border-radius: 50px;
      font-size: 12px;
      font-weight: 600;
      text-transform: uppercase;
    }
    
    .badge-new {
      background: #4CAF50;
      color: white;
    }
    
    .badge-sale {
      background: #FF5722;
      color: white;
    }
    
    .badge-season {
      background: #FF9800;
      color: white;
    }
    
    .product-content {
      padding: 20px;
    }
    
    .product-brand {
      font-size: 14px;
      color: #777;
      text-transform: uppercase;
      letter-spacing: 1px;
      margin-bottom: 5px;
    }
    
    .product-title {
      font-size: 18px;
      font-weight: 600;
      margin: 0 0 15px;
      color: #333;
    }
    
    .product-details {
      margin-bottom: 15px;
    }
    
    .product-detail {
      margin-bottom: 8px;
      font-size: 14px;
      color: #555;
      display: flex;
      align-items: center;
      gap: 8px;
    }
    
    .product-detail i {
      color: #888;
      width: 18px;
    }
    
    .product-price {
      display: flex;
      align-items: center;
      gap: 10px;
      margin-bottom: 20px;
      font-weight: 600;
      color: #333;
    }
    
    .current-price {
      font-size: 20px;
    }
    
    .old-price {
      font-size: 16px;
      color: #999;
      text-decoration: line-through;
    }
    
    .product-actions {
      display: flex;
      flex-direction: column;
      gap: 15px;
    }
    
    .date-range-container {
      margin-bottom: 10px;
    }
    
    .days-count {
      font-size: 14px;
      color: #666;
      margin-bottom: 15px;
    }
    
    .action-button {
      padding: 12px;
      border-radius: 8px;
      border: none;
      font-weight: 600;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 8px;
      transition: all 0.3s ease;
    }
    
    .rental-button {
      background: #4A90E2;
      color: white;
    }
    
    .rental-button:hover {
      background: #3A7BC8;
    }
    
    .purchase-button {
      background: #F5F5F5;
      color: #333;
    }
    
    .purchase-button:hover {
      background: #E0E0E0;
    }
    
    /* Modale Anteprima Prodotto */
    .product-modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0,0,0,0.7);
      z-index: 1000;
      align-items: center;
      justify-content: center;
      opacity: 0;
      transition: opacity 0.3s ease;
    }
    
    .product-modal.open {
      opacity: 1;
    }
    
    .product-modal-container {
      background: white;
      width: 90%;
      max-width: 1000px;
      max-height: 85vh;
      border-radius: 12px;
      overflow: hidden;
      position: relative;
      box-shadow: 0 15px 30px rgba(0,0,0,0.2);
      transform: translateY(20px);
      transition: transform 0.3s ease;
    }
    
    .product-modal.open .product-modal-container {
      transform: translateY(0);
    }
    
    .modal-close {
      position: absolute;
      top: 15px;
      right: 15px;
      background: white;
      border: none;
      width: 35px;
      height: 35px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      z-index: 10;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }
    
    .product-modal-content {
      display: flex;
      flex-direction: column;
      max-height: 85vh;
      overflow-y: auto;
    }
    
    @media (min-width: 768px) {
      .product-modal-content {
        flex-direction: row;
      }
    }
    
    .product-modal-gallery {
      flex: 1;
      padding: 20px;
      display: flex;
      flex-direction: column;
      gap: 15px;
    }
    
    .main-image-container {
      width: 100%;
      height: 300px;
      border-radius: 8px;
      overflow: hidden;
    }
    
    #modal-main-image {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    
    .thumbnail-container {
      display: flex;
      gap: 10px;
    }
    
    .thumbnail {
      width: 70px;
      height: 70px;
      border-radius: 8px;
      overflow: hidden;
      cursor: pointer;
      background-size: cover;
      background-position: center;
      opacity: 0.7;
      transition: opacity 0.3s ease;
      border: 2px solid transparent;
    }
    
    .thumbnail.active {
      opacity: 1;
      border-color: #4A90E2;
    }
    
    .product-modal-info {
      flex: 1;
      padding: 30px;
      background: #f9f9f9;
    }
    
    .modal-brand {
      font-size: 16px;
      text-transform: uppercase;
      letter-spacing: 1px;
      color: #777;
      margin: 0 0 5px;
    }
    
    .modal-title {
      font-size: 24px;
      font-weight: 700;
      color: #333;
      margin: 0 0 20px;
    }
    
    .modal-price {
      font-size: 22px;
      font-weight: 600;
      color: #333;
      margin-bottom: 20px;
    }
    
    .modal-details {
      margin-bottom: 20px;
    }
    
    .modal-detail {
      margin-bottom: 12px;
      display: flex;
      align-items: center;
    }
    
    .detail-label {
      font-weight: 600;
      width: 100px;
      color: #555;
    }
    
    .detail-value {
      color: #333;
    }
    
    .modal-description {
      color: #666;
      line-height: 1.6;
      margin-bottom: 25px;
    }
    
    .modal-actions {
      display: flex;
      gap: 15px;
      flex-wrap: wrap;
    }
    
    .modal-action-button {
      padding: 12px 20px;
      border-radius: 8px;
      border: none;
      font-weight: 600;
      cursor: pointer;
      display: flex;
      align-items: center;
      gap: 8px;
      transition: all 0.3s ease;
    }
    
    .modal-rent {
      background: #4A90E2;
      color: white;
      flex: 1;
    }
    
    .modal-rent:hover {
      background: #3A7BC8;
    }
    
    .modal-buy {
      background: #333;
      color: white;
      flex: 1;
    }
    
    .modal-buy:hover {
      background: #222;
    }
    
    /* Hero Section migliorata */
    .hero {
      position: relative;
      background: url('https://images.unsplash.com/photo-1567401893414-76b7b1e5a7a5?ixlib=rb-4.0.3&auto=format&fit=crop&w=1350&q=80') no-repeat center center;
      background-size: cover;
      padding: 100px 20px;
      margin-bottom: 40px;
      color: white;
      text-align: center;
    }
    
    .hero-overlay {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0,0,0,0.5);
    }
    
    .hero-content {
      position: relative;
      z-index: 1;
      max-width: 800px;
      margin: 0 auto;
    }
    
    .hero h1 {
      font-size: 36px;
      font-weight: 700;
      margin-bottom: 15px;
      text-shadow: 0 2px 4px rgba(0,0,0,0.3);
    }
    
    .hero p {
      font-size: 18px;
      margin-bottom: 25px;
      text-shadow: 0 1px 2px rgba(0,0,0,0.3);
    }
    
    .hero-button {
      display: inline-block;
      padding: 14px 28px;
      background: white;
      color: #333;
      text-decoration: none;
      border-radius: 50px;
      font-weight: 600;
      box-shadow: 0 4px 15px rgba(0,0,0,0.1);
      transition: all 0.3s ease;
    }
    
    .hero-button:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 18px rgba(0,0,0,0.15);
    }
    
    /* Responsive design */
    @media (max-width: 768px) {
      .product-modal-container {
        width: 95%;
        max-height: 90vh;
      }
      
      .main-image-container {
        height: 250px;
      }
      
      .thumbnail {
        width: 50px;
        height: 50px;
      }
      
      .modal-title {
        font-size: 20px;
      }
      
      .hero h1 {
        font-size: 28px;
      }
      
      .hero p {
        font-size: 16px;
      }
    }
    
    /* Highlight effect per la card prodotto */
    .highlight {
      animation: highlight 1.5s ease;
    }
    
    @keyframes highlight {
      0% { box-shadow: 0 0 0 rgba(74, 144, 226, 0); }
      50% { box-shadow: 0 0 25px rgba(74, 144, 226, 0.8); }
      100% { box-shadow: 0 5px 15px rgba(0,0,0,0.08); }
    }
  </style>

  <!-- Script -->
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      // Inizializza AOS (Animate On Scroll)
      AOS.init({
        duration: 800,
        once: true,
        offset: 50
      });

      // Miglioriamo le card dei prodotti con JavaScript invece di usare helper Handlebars
      function enhanceProductCards() {
        document.querySelectorAll('.product-card').forEach(card => {
          const condition = card.getAttribute('data-condition');
          const price = parseFloat(card.getAttribute('data-price'));
          const category = card.getAttribute('data-category').toLowerCase();
          const badges = card.querySelector('.product-badges');
          
          // Aggiungi badge "Nuovo" se la condizione è "Nuovo"
          if (condition === 'Nuovo') {
            badges.innerHTML += '<span class="badge badge-new">Nuovo</span>';
          }
          
          // Aggiungi badge "Offerta" se il prezzo è < 30€
          if (price < 30) {
            badges.innerHTML += '<span class="badge badge-sale">Offerta</span>';
          }
          
          // Aggiungi prezzo originale (barrato) se il prezzo è > 100€
          if (price > 100) {
            const oldPriceElement = card.querySelector('.old-price');
            const oldPrice = (price * 1.2).toFixed(2);
            oldPriceElement.textContent = oldPrice + '€';
          }
          
          // Aggiungi badge stagionale se è un prodotto estivo (periodo maggio-settembre)
          const currentMonth = new Date().getMonth();
          if (currentMonth >= 4 && currentMonth <= 8) {
            if (category.includes('t-shirt') || category.includes('bermuda') || 
                category.includes('sandali') || category.includes('estate')) {
              badges.innerHTML += '<span class="badge badge-season">Estate</span>';
            }
          }
        });
      }
      
      // Chiamiamo subito la funzione per migliorare le card all'avvio
      enhanceProductCards();

      // Effetto dello scroll sull'header
      window.addEventListener('scroll', function() {
        if (window.scrollY > 50) {
          document.getElementById('header').classList.add('scrolled');
        } else {
          document.getElementById('header').classList.remove('scrolled');
        }
      });

      // Inizializza il carrello dal localStorage
      let cart = JSON.parse(localStorage.getItem('cart')) || [];
      updateCartCount();
      
      // Modale anteprima prodotto
      const productModal = document.getElementById('product-modal');
      const modalClose = document.querySelector('.modal-close');
      let currentProduct = null;
      
      // Funzione per aprire il modale prodotto
      function openProductModal(productId) {
        // Trova il prodotto dal DOM
        const productCard = document.querySelector(`.product-card[data-id="${productId}"]`);
        const brand = productCard.getAttribute('data-brand');
        const category = productCard.getAttribute('data-category');
        const price = productCard.getAttribute('data-price');
        const color = productCard.getAttribute('data-color');
        const condition = productCard.getAttribute('data-condition');
        const imgSrc = productCard.querySelector('.product-img').src;
        
        // Imposta i dati nel modale
        document.getElementById('modal-brand').textContent = brand;
        document.getElementById('modal-title').textContent = category;
        document.getElementById('modal-price').textContent = price + '€';
        document.getElementById('modal-color').textContent = color;
        document.getElementById('modal-condition').textContent = condition;
        document.getElementById('modal-main-image').src = imgSrc;
        
        // Imposta le immagini thumbnail
        const thumbnails = document.querySelectorAll('.thumbnail');
        thumbnails[0].style.backgroundImage = `url('${imgSrc}')`;
        
        // Genera diverse prospettive dell'immagine per le miniature
        // Creiamo URL diverse per dare l'impressione di diverse angolazioni
        const categoryEncoded = encodeURIComponent(category.toLowerCase());
        const colorEncoded = encodeURIComponent(color.toLowerCase());
        
        thumbnails[1].style.backgroundImage = `url('https://source.unsplash.com/500x600/?${categoryEncoded},${colorEncoded},model&sig=${productId}1')`;
        thumbnails[2].style.backgroundImage = `url('https://source.unsplash.com/500x600/?${categoryEncoded},${colorEncoded},detail&sig=${productId}2')`;
        
        // Salva riferimento al prodotto corrente
        currentProduct = {
          id: productId,
          brand,
          category,
          price,
          color,
          condition
        };
        
        // Mostra il modale con animazione
        productModal.style.display = 'flex';
        setTimeout(() => {
          productModal.classList.add('open');
        }, 10);
        
        document.body.style.overflow = 'hidden';
      }
      
      // Event listener per i pulsanti di anteprima rapida
      document.querySelectorAll('.quick-view-btn').forEach(btn => {
        btn.addEventListener('click', function(e) {
          e.preventDefault();
          const productId = this.getAttribute('data-id');
          openProductModal(productId);
        });
      });
      
      // Event listener per chiudere il modale
      modalClose.addEventListener('click', function() {
        productModal.classList.remove('open');
        setTimeout(() => {
          productModal.style.display = 'none';
          document.body.style.overflow = 'auto';
        }, 300);
      });
      
      // Event listener per le miniature
      document.querySelectorAll('.thumbnail').forEach(thumb => {
        thumb.addEventListener('click', function() {
          const index = this.getAttribute('data-index');
          
          // Attiva la miniatura corrente
          document.querySelectorAll('.thumbnail').forEach(t => t.classList.remove('active'));
          this.classList.add('active');
          
          // Aggiorna l'immagine principale
          if (index === '0') {
            document.getElementById('modal-main-image').src = this.style.backgroundImage.slice(5, -2);
          } else {
            // Usa l'url di sfondo della thumbnail
            document.getElementById('modal-main-image').src = this.style.backgroundImage.slice(5, -2);
          }
        });
      });
      
      // Event listener per i pulsanti del modale
      document.getElementById('modal-rent-button').addEventListener('click', function() {
        // Scorrimento alla card del prodotto per selezionare le date
        productModal.classList.remove('open');
        setTimeout(() => {
          productModal.style.display = 'none';
          document.body.style.overflow = 'auto';
          
          // Trova la card del prodotto e scorri ad essa
          const productCard = document.querySelector(`.product-card[data-id="${currentProduct.id}"]`);
          productCard.scrollIntoView({ behavior: 'smooth', block: 'center' });
          
          // Evidenzia la card
          productCard.classList.add('highlight');
          setTimeout(() => {
            productCard.classList.remove('highlight');
          }, 2000);
          
          // Focalizza sul datepicker
          const dateInput = productCard.querySelector('.date-range-input');
          setTimeout(() => {
            dateInput.focus();
          }, 800);
        }, 300);
      });
      
      document.getElementById('modal-buy-button').addEventListener('click', function() {
        // Aggiungi direttamente al carrello il prodotto come acquisto
        const purchaseItem = {
          type: 'purchase',
          id: currentProduct.id,
          brand: currentProduct.brand,
          category: currentProduct.category,
          price: currentProduct.price,
          color: currentProduct.color,
          condition: currentProduct.condition
        };
        
        addToCart(purchaseItem);
        
        // Chiudi il modale
        productModal.classList.remove('open');
        setTimeout(() => {
          productModal.style.display = 'none';
          document.body.style.overflow = 'auto';
        }, 300);
      });

      // Mobile menu toggle
      const hamburger = document.getElementById('hamburger');
      const mobileMenu = document.getElementById('mobile-menu');
      const mobileMenuClose = document.getElementById('mobile-menu-close');

      hamburger.addEventListener('click', function() {
        this.classList.toggle('active');
        mobileMenu.classList.toggle('active');
        document.body.style.overflow = mobileMenu.classList.contains('active') ? 'hidden' : 'auto';
      });

      mobileMenuClose.addEventListener('click', function() {
        hamburger.classList.remove('active');
        mobileMenu.classList.remove('active');
        document.body.style.overflow = 'auto';
      });

      document.getElementById('mobile-cart-button').addEventListener('click', function(e) {
        e.preventDefault();
        hamburger.classList.remove('active');
        mobileMenu.classList.remove('active');
        document.body.style.overflow = 'auto';
        openCart();
      });

      // Gestione del carrello
      document.getElementById('cart-button').addEventListener('click', function (e) {
        e.preventDefault();
        openCart();
      });

      document.querySelector('.cart-close').addEventListener('click', function () {
        closeCart();
      });

      document.querySelector('.cart-continue').addEventListener('click', function () {
        closeCart();
      });

      document.querySelector('.cart-checkout').addEventListener('click', function () {
        if (cart.length === 0) {
          showNotification('Il carrello è vuoto!', true);
          return;
        }

        // Redirect alla pagina di checkout
        window.location.href = '/checkout';
      });

      // Funzioni per il carrello
      function addToCart(item) {
        // Verifica se è un prodotto a noleggio e se esiste già nel carrello
        if (item.type === 'rental') {
          const existingRentalItem = cart.find(cartItem =>
            cartItem.type === 'rental' && cartItem.id === item.id
          );

          if (existingRentalItem) {
            showNotification('Questo prodotto è già nel tuo carrello a noleggio!', true);
            return;
          }
        }

        // Genera un ID univoco per l'elemento del carrello
        item.cartId = Date.now() + Math.random().toString(36).substring(2, 9);
        cart.push(item);
        localStorage.setItem('cart', JSON.stringify(cart));
        updateCartCount();
        
        // Effetto pulse sull'icona del carrello
        document.querySelector('.cart-count').classList.add('pulse');
        setTimeout(() => {
          document.querySelector('.cart-count').classList.remove('pulse');
        }, 500);
        
        showNotification(
          item.type === 'rental' 
            ? `"${item.brand} ${item.category}" aggiunto al carrello per il noleggio!` 
            : `"${item.brand} ${item.category}" aggiunto al carrello per l'acquisto!`
        );
      }

      function removeFromCart(cartId) {
        cart = cart.filter(item => item.cartId !== cartId);
        localStorage.setItem('cart', JSON.stringify(cart));
        updateCartUI();
        updateCartCount();
      }

      function updateCartCount() {
        const count = cart.length;
        document.querySelector('.cart-count').textContent = count;
        document.querySelector('.mobile-cart-count').textContent = `(${count})`;
      }

      function openCart() {
        updateCartUI();
        const cartModal = document.getElementById('cart-modal');
        cartModal.style.display = 'block';
        document.body.style.overflow = 'hidden'; // Disabilita lo scroll della pagina
        
        // Aggiungi la classe per l'animazione
        setTimeout(() => {
          cartModal.classList.add('open');
        }, 10);
      }

      function closeCart() {
        const cartModal = document.getElementById('cart-modal');
        cartModal.classList.remove('open');
        
        // Aspetta che l'animazione finisca prima di nascondere
        setTimeout(() => {
          cartModal.style.display = 'none';
          document.body.style.overflow = 'auto'; // Riabilita lo scroll della pagina
        }, 300);
      }

      function updateCartUI() {
        const cartItemsContainer = document.querySelector('.cart-items');
        cartItemsContainer.innerHTML = '';

        if (cart.length === 0) {
          cartItemsContainer.innerHTML = `
            <div class="cart-empty">
              <i class="fas fa-shopping-basket"></i>
              <p>Il tuo carrello è vuoto</p>
              <button class="cart-empty-button" onclick="closeCart()">
                <i class="fas fa-store"></i> Continua lo shopping
              </button>
            </div>
          `;
          updateCartTotals(0);
          return;
        }

        let subtotal = 0;

        cart.forEach(item => {
          const itemPrice = item.type === 'rental'
            ? parseFloat(item.price) * parseInt(item.duration)
            : parseFloat(item.price);

          subtotal += itemPrice;

          const cartItemHTML = `
            <div class="cart-item ${item.type}">
              <div class="cart-item-details">
                <div class="cart-item-title">
                  ${item.brand} - ${item.category}
                  <span class="cart-item-badge ${item.type === 'rental' ? 'rental' : 'purchase'}">
                    ${item.type === 'rental' ? 'Noleggio' : 'Acquisto'}
                  </span>
                </div>
                <div class="cart-item-info">
                  <span><i class="fas fa-palette"></i> ${item.color}</span>
                  <span><i class="fas fa-info-circle"></i> ${item.condition}</span>
                </div>
                ${item.type === 'rental' ? `
                  <div class="cart-item-period">
                    <i class="far fa-calendar-alt"></i> Dal ${item.startDate} al ${item.endDate} (${item.duration} ${parseInt(item.duration) === 1 ? 'giorno' : 'giorni'})
                  </div>
                ` : ''}
              </div>
              <div class="cart-item-actions">
                <div class="cart-item-price">${itemPrice.toFixed(2)}€</div>
                <button class="cart-item-remove" data-cart-id="${item.cartId}" aria-label="Rimuovi dal carrello">
                  <i class="fas fa-trash-alt"></i>
                </button>
              </div>
            </div>
          `;

          cartItemsContainer.innerHTML += cartItemHTML;
        });

        // Aggiorna i totali
        updateCartTotals(subtotal);

        // Aggiungi event listener ai pulsanti di rimozione
        document.querySelectorAll('.cart-item-remove').forEach(button => {
          button.addEventListener('click', function () {
            const cartId = this.getAttribute('data-cart-id');
            removeFromCart(cartId);
          });
        });
      }

      function updateCartTotals(subtotal) {
        const tax = subtotal * 0.22;
        const total = subtotal + tax;

        document.getElementById('cart-subtotal').textContent = subtotal.toFixed(2) + '€';
        document.getElementById('cart-tax').textContent = tax.toFixed(2) + '€';
        document.getElementById('cart-total').textContent = total.toFixed(2) + '€';
      }

      // Inizializza i date range picker per tutti i prodotti
      document.querySelectorAll('.date-range-input').forEach(input => {
        const productId = input.id.split('-')[1];
        const durataInput = document.getElementById('durata-' + productId);
        const daysCountElement = document.getElementById('days-count-' + productId);
        const startDateInput = document.getElementById('startDate-' + productId);
        const endDateInput = document.getElementById('endDate-' + productId);

        // Imposta la data di oggi come minima selezionabile
        const today = new Date();

        // Ottenere domani come data predefinita di fine
        const tomorrow = new Date();
        tomorrow.setDate(tomorrow.getDate() + 1);

        // Imposta i valori iniziali degli input nascosti per le date
        startDateInput.value = formatDate(today);
        endDateInput.value = formatDate(tomorrow);

        $(input).daterangepicker({
          opens: 'center',
          minDate: today,
          startDate: today,
          endDate: tomorrow,
          locale: {
            format: 'DD/MM/YYYY',
            separator: ' - ',
            applyLabel: 'Applica',
            cancelLabel: 'Annulla',
            fromLabel: 'Da',
            toLabel: 'A',
            weekLabel: 'W',
            customRangeLabel: 'Intervallo personalizzato',
            daysOfWeek: ['Do', 'Lu', 'Ma', 'Me', 'Gi', 'Ve', 'Sa'],
            monthNames: [
              'Gennaio', 'Febbraio', 'Marzo', 'Aprile', 'Maggio', 'Giugno',
              'Luglio', 'Agosto', 'Settembre', 'Ottobre', 'Novembre', 'Dicembre'
            ],
            firstDay: 1
          }
        }, function (start, end, label) {
          // Calcola il numero di giorni
          const startDate = start.toDate();
          const endDate = end.toDate();
          const diffTime = Math.abs(endDate - startDate);
          const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));

          // Aggiorna il campo nascosto con il numero di giorni
          durataInput.value = diffDays;

          // Aggiorna i campi nascosti per le date
          startDateInput.value = formatDate(startDate);
          endDateInput.value = formatDate(endDate);

          // Aggiorna il testo che mostra il numero di giorni
          daysCountElement.innerHTML = `<i class="far fa-calendar-alt"></i> Durata: ${diffDays} ${diffDays === 1 ? 'giorno' : 'giorni'}`;
        });

        // Imposta i valori iniziali
        const initialDiffDays = 1;
        durataInput.value = initialDiffDays;
        daysCountElement.innerHTML = `<i class="far fa-calendar-alt"></i> Durata: ${initialDiffDays} giorno`;
      });

      // Helper per formattare la data
      function formatDate(date) {
        const options = { day: '2-digit', month: '2-digit', year: 'numeric' };
        return new Intl.DateTimeFormat('it-IT', options).format(date);
      }

      // Gestione form filtro
      document.getElementById('filterForm').addEventListener('submit', function (e) {
        e.preventDefault();

        const formData = new FormData(this);
        const params = new URLSearchParams();

        // Aggiungi solo i campi non vuoti ai parametri
        for (const [key, value] of formData.entries()) {
          if (value.trim() !== '') {
            params.append(key, value);
          }
        }

        fetchProducts('/noleggio?' + params.toString());
      });

      // Gestione form "Mostra tutti"
      document.getElementById('showAllForm').addEventListener('submit', function (e) {
        e.preventDefault();
        fetchProducts('/noleggio');
      });

      // Gestione noleggio prodotti (aggiunta al carrello)
      document.querySelectorAll('.rental-form').forEach(form => {
        form.addEventListener('submit', function (e) {
          e.preventDefault();

          const formData = new FormData(this);
          const rentalItem = {
            type: 'rental',
            id: formData.get('id'),
            brand: formData.get('brand'),
            category: formData.get('category'),
            price: formData.get('price'),
            color: formData.get('color'),
            condition: formData.get('condition'),
            duration: formData.get('durata'),
            startDate: formData.get('startDate'),
            endDate: formData.get('endDate'),
            dateRange: formData.get('daterange')
          };

          addToCart(rentalItem);
        });
      });

      // Gestione acquisto prodotti (aggiunta al carrello)
      document.querySelectorAll('.purchase-form').forEach(form => {
        form.addEventListener('submit', function (e) {
          e.preventDefault();

          const formData = new FormData(this);
          const purchaseItem = {
            type: 'purchase',
            id: formData.get('id'),
            brand: formData.get('brand'),
            category: formData.get('category'),
            price: formData.get('price'),
            color: formData.get('color'),
            condition: formData.get('condition')
          };

          addToCart(purchaseItem);
        });
      });

      // Funzione per caricare i prodotti
      function fetchProducts(url) {
        const productsContainer = document.getElementById('products');
        const loader = document.getElementById('loaderContainer');

        // Mostra loader
        loader.style.display = 'block';
        productsContainer.style.opacity = '0.5';

        fetch(url)
          .then(response => {
            if (!response.ok) {
              throw new Error('Errore nel caricamento dei prodotti');
            }
            return response.text();
          })
          .then(html => {
            // Crea un elemento temporaneo per estrarre la sezione prodotti dall'HTML
            const tempDiv = document.createElement('div');
            tempDiv.innerHTML = html;

            // Ottieni la sezione prodotti dalla risposta
            const newProducts = tempDiv.querySelector('#products');

            if (newProducts) {
              productsContainer.innerHTML = newProducts.innerHTML;

              // Migliora le card dei prodotti appena caricate
              enhanceProductCards();
              
              // Riattacca gli event listener ai nuovi form e ai pulsanti di anteprima
              attachEventListeners();
              
              // Reinizializza le animazioni AOS
              AOS.refresh();
            } else {
              // Fallback se non riesce a trovare la sezione prodotti
              productsContainer.innerHTML = `
                <div class="no-results" data-aos="fade-up">
                  <i class="fas fa-search"></i>
                  <p>Nessun prodotto trovato con i filtri applicati.</p>
                  <p>Prova a modificare i criteri di ricerca.</p>
                </div>`;
            }
          })
          .catch(error => {
            showNotification(error.message, true);
            console.error('Errore:', error);
          })
          .finally(() => {
            // Nascondi loader
            loader.style.display = 'none';
            productsContainer.style.opacity = '1';
          });
      }
      
      // Funzione per allegare tutti gli event listener necessari dopo il caricamento di nuovi prodotti
      function attachEventListeners() {
        // Event listener per i pulsanti di anteprima rapida
        document.querySelectorAll('.quick-view-btn').forEach(btn => {
          btn.addEventListener('click', function(e) {
            e.preventDefault();
            const productId = this.getAttribute('data-id');
            openProductModal(productId);
          });
        });
        
        // Gestione noleggio prodotti (aggiunta al carrello)
        document.querySelectorAll('.rental-form').forEach(form => {
          form.addEventListener('submit', function (e) {
            e.preventDefault();

            const formData = new FormData(this);
            const rentalItem = {
              type: 'rental',
              id: formData.get('id'),
              brand: formData.get('brand'),
              category: formData.get('category'),
              price: formData.get('price'),
              color: formData.get('color'),
              condition: formData.get('condition'),
              duration: formData.get('durata'),
              startDate: formData.get('startDate'),
              endDate: formData.get('endDate'),
              dateRange: formData.get('daterange')
            };

            addToCart(rentalItem);
          });
        });

        // Gestione acquisto prodotti (aggiunta al carrello)
        document.querySelectorAll('.purchase-form').forEach(form => {
          form.addEventListener('submit', function (e) {
            e.preventDefault();

            const formData = new FormData(this);
            const purchaseItem = {
              type: 'purchase',
              id: formData.get('id'),
              brand: formData.get('brand'),
              category: formData.get('category'),
              price: formData.get('price'),
              color: formData.get('color'),
              condition: formData.get('condition')
            };

            addToCart(purchaseItem);
          });
        });
        
        // Reinizializza i date range picker per i nuovi prodotti
        document.querySelectorAll('.date-range-input').forEach(input => {
          const productId = input.id.split('-')[1];
          const durataInput = document.getElementById('durata-' + productId);
          const daysCountElement = document.getElementById('days-count-' + productId);
          const startDateInput = document.getElementById('startDate-' + productId);
          const endDateInput = document.getElementById('endDate-' + productId);

          // Imposta la data di oggi come minima selezionabile
          const today = new Date();

          // Ottenere domani come data predefinita di fine
          const tomorrow = new Date();
          tomorrow.setDate(tomorrow.getDate() + 1);

          // Imposta i valori iniziali degli input nascosti per le date
          startDateInput.value = formatDate(today);
          endDateInput.value = formatDate(tomorrow);

          $(input).daterangepicker({
            opens: 'center',
            minDate: today,
            startDate: today,
            endDate: tomorrow,
            locale: {
              format: 'DD/MM/YYYY',
              separator: ' - ',
              applyLabel: 'Applica',
              cancelLabel: 'Annulla',
              fromLabel: 'Da',
              toLabel: 'A',
              weekLabel: 'W',
              customRangeLabel: 'Intervallo personalizzato',
              daysOfWeek: ['Do', 'Lu', 'Ma', 'Me', 'Gi', 'Ve', 'Sa'],
              monthNames: [
                'Gennaio', 'Febbraio', 'Marzo', 'Aprile', 'Maggio', 'Giugno',
                'Luglio', 'Agosto', 'Settembre', 'Ottobre', 'Novembre', 'Dicembre'
              ],
              firstDay: 1
            }
          }, function (start, end, label) {
            // Calcola il numero di giorni
            const startDate = start.toDate();
            const endDate = end.toDate();
            const diffTime = Math.abs(endDate - startDate);
            const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));

            // Aggiorna il campo nascosto con il numero di giorni
            durataInput.value = diffDays;

            // Aggiorna i campi nascosti per le date
            startDateInput.value = formatDate(startDate);
            endDateInput.value = formatDate(endDate);

            // Aggiorna il testo che mostra il numero di giorni
            daysCountElement.innerHTML = `<i class="far fa-calendar-alt"></i> Durata: ${diffDays} ${diffDays === 1 ? 'giorno' : 'giorni'}`;
          });

          // Imposta i valori iniziali
          const initialDiffDays = 1;
          durataInput.value = initialDiffDays;
          daysCountElement.innerHTML = `<i class="far fa-calendar-alt"></i> Durata: ${initialDiffDays} giorno`;
        });
      }

      // Allegare gli event listener iniziali
      attachEventListeners();

      // Funzione per mostrare notifiche
      function showNotification(message, isError = false) {
        const notification = document.getElementById('notification');
        const notificationMessage = notification.querySelector('.notification-message');
        
        // Aggiorna icona
        notification.querySelector('i').className = isError ? 'fas fa-exclamation-circle' : 'fas fa-check-circle';
        
        // Aggiorna messaggio
        notificationMessage.textContent = message;
        
        // Aggiorna classe
        notification.className = 'notification' + (isError ? ' error' : '');
        
        // Mostra notifica
        notification.classList.add('show');

        // Nascondi dopo 3 secondi
        setTimeout(() => {
          notification.classList.remove('show');
        }, 3000);
      }

      // Controllo data utente
      const currentDate = '2025-05-03';
      const currentUser = 'Miftarve';
      const welcomeMessage = `Benvenuto, ${currentUser}!`;
      
      // Personalizzazione per l'utente
      if (currentUser) {
        // Mostriamo un messaggio di benvenuto personalizzato
        showNotification(welcomeMessage);
      }
    });
  </script>
</body>

</html>